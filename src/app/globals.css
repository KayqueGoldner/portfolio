@import 'tailwindcss';

@plugin 'tailwindcss-animate';

@custom-variant dark (&:is(.dark *));

@theme {
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --color-chart-1: hsl(var(--chart-1));
  --color-chart-2: hsl(var(--chart-2));
  --color-chart-3: hsl(var(--chart-3));
  --color-chart-4: hsl(var(--chart-4));
  --color-chart-5: hsl(var(--chart-5));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer base {
    :root {
      --background: 0 0% 100%;
      --foreground: 0 0% 3.9%;

      --card: 0 0% 100%;
      --card-foreground: 0 0% 3.9%;

      --popover: 0 0% 100%;
      --popover-foreground: 0 0% 3.9%;

      --primary: 0 0% 9%;
      --primary-foreground: 0 0% 98%;

      --secondary: 0 0% 96.1%;
      --secondary-foreground: 0 0% 9%;

      --muted: 0 0% 96.1%;
      --muted-foreground: 0 0% 45.1%;

      --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;

      --destructive: 0 84.2% 60.2%;
      --destructive-foreground: 0 0% 98%;

      --border: 0 0% 89.8%;
      --input: 0 0% 89.8%;
      --ring: 0 0% 3.9%;

      --radius: 0.5rem;

      --chart-1: 12 76% 61%;

      --chart-2: 173 58% 39%;

      --chart-3: 197 37% 24%;

      --chart-4: 43 74% 66%;

      --chart-5: 27 87% 67%;

      --cursor-bg: radial-gradient(circle, rgba(0 0 0 / 0.9), rgba(0 0 0 / 0.4));
      --cursor-shadow: 0 0 12px rgba(0 0 0 / 0.7), 0 0 24px rgba(0 0 0 / 0.3);
      --cursor-border-color: rgba(0 0 0 / 0.8);
      --cursor-border-shadow: 0 0 8px rgba(0 0 0 / 0.5);
      --particle-bg: radial-gradient(circle, rgba(0 0 0 / 0.9), rgba(0 0 0 / 0.3));
      --particle-shadow: 0 0 6px rgba(0 0 0 / 0.6);
    }

    .dark {
      --background: 0 0% 3.9%;
      --foreground: 0 0% 98%;

      --card: 0 0% 3.9%;
      --card-foreground: 0 0% 98%;

      --popover: 0 0% 3.9%;
      --popover-foreground: 0 0% 98%;

      --primary: 0 0% 98%;
      --primary-foreground: 0 0% 9%;

      --secondary: 0 0% 14.9%;
      --secondary-foreground: 0 0% 98%;

      --muted: 0 0% 14.9%;
      --muted-foreground: 0 0% 63.9%;

      --accent: 0 0% 14.9%;
      --accent-foreground: 0 0% 98%;

      --destructive: 0 62.8% 30.6%;
      --destructive-foreground: 0 0% 98%;

      --border: 0 0% 14.9%;
      --input: 0 0% 14.9%;
      --ring: 0 0% 83.1%;
      --chart-1: 220 70% 50%;
      --chart-2: 160 60% 45%;
      --chart-3: 30 80% 55%;
      --chart-4: 280 65% 60%;
      --chart-5: 340 75% 55%;

      --cursor-bg: radial-gradient(circle, rgba(255 255 255 / 0.8), rgba(255 255 255 / 0.3));
      --cursor-shadow: 0 0 10px rgba(255 255 255 / 0.8), 0 0 20px rgba(255 255 255 / 0.4);
      --cursor-border-color: rgba(255 255 255 / 0.9);
      --cursor-border-shadow: 0 0 10px rgba(255 255 255 / 0.6);
      --particle-bg: radial-gradient(circle, rgba(255 255 255 / 0.9), rgba(255 255 255 / 0.4));
      --particle-shadow: 0 0 8px rgba(255 255 255 / 0.7);
    }
  }

  @layer base {
    * {
      @apply border-border !cursor-none;
    }
    body {
      @apply bg-background text-foreground cursor-none;
    }
  }

  h3 code {
    @apply text-lg! md:text-xl!;
  }
  
  pre {
    @apply px-0! rounded-lg overflow-x-auto py-4
  }
   
  pre [data-line] {
    @apply px-4
  }

  code {
    @apply text-sm md:text-base leading-loose!;
  }
  
  pre > code {
    counter-reset: line;
  }
  
  code[data-theme],
  code[data-theme] span {
    color: var(--shiki-light);
    background-color: var(--shiki-light-bg);
  }
   
  @media (prefers-color-scheme: dark) {
    code[data-theme],
    code[data-theme] span {
      color: var(--shiki-dark);
      background-color: var(--shiki-dark-bg);
    }
  }
  
  code[data-line-numbers] {
    counter-reset: line;
  }
  
  code[data-line-numbers] > [data-line]::before {
    counter-increment: line;
    content: counter(line);
    @apply inline-block w-4 mr-4 text-right text-gray-500;
  }
 
  code {
    counter-reset: line;
  }
 
  code > [data-line]::before {
  counter-increment: line;
  content: counter(line);
 
  /* Other styling */
  display: inline-block;
  width: 1rem;
  margin-right: 2rem;
  text-align: right;
  color: gray;
}
 
code[data-line-numbers-max-digits="2"] > [data-line]::before {
  width: 2rem;
}
 
code[data-line-numbers-max-digits="3"] > [data-line]::before {
  width: 3rem;
}

@theme {
  --animate-gradient: gradient 8s linear infinite;

  @keyframes gradient {
    to {
      background-position: var(--bg-size) 0;
    }
  }
  
  --animate-wiggle: wiggle 300ms ease-in-out infinite;
  @keyframes wiggle {
    0%, 7% {
      transform: rotateZ(0);
    }
    15% {
      transform: rotateZ(-15deg);
    }
    20% {
      transform: rotateZ(10deg);
    }
    25% {
      transform: rotateZ(-10deg);
    }
    30% {
      transform: rotateZ(6deg);
    }
    35% {
      transform: rotateZ(-4deg);
    }
    40%, 100% {
      transform: rotateZ(0);
    }
  }
}

@theme inline {
  --animate-first: moveVertical 30s ease infinite;
  --animate-second: moveInCircle 20s reverse infinite;
  --animate-third: moveInCircle 40s linear infinite;
  --animate-fourth: moveHorizontal 40s ease infinite;
  --animate-fifth: moveInCircle 20s ease infinite;
}
 
@keyframes moveHorizontal {
  0% {
    transform: translateX(-50%) translateY(-10%);
  }
  50% {
    transform: translateX(50%) translateY(10%);
  }
  100% {
    transform: translateX(-50%) translateY(-10%);
  }
}
 
@keyframes moveInCircle {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
 
@keyframes moveVertical {
  0% {
    transform: translateY(-50%);
  }
  50% {
    transform: translateY(50%);
  }
  100% {
    transform: translateY(-50%);
  }
}
@layer utilities {
  .cursor {
    @apply pointer-events-none fixed z-[9999] rounded-full transition-transform;
    width: 14px;
    height: 14px;
    transform: translate(-50%, -50%);
    background: var(--cursor-bg);
    opacity: 0.9;
    box-shadow: var(--cursor-shadow);
    backdrop-filter: blur(2px);
  }

  .cursor-border {
    @apply pointer-events-none fixed z-[9999] rounded-full border;
    width: 38px;
    height: 38px;
    transform: translate(-50%, -50%);
    border-width: 2px;
    border-color: var(--cursor-border-color);
    box-shadow: var(--cursor-border-shadow);
    transition: 100ms ease-out;
    transition-property: width, height, top, right, left, bottom;
    animation: pulse 2s infinite ease-in-out;
  }

  .particle {
    @apply pointer-events-none fixed rounded-full;
    width: 6px;
    height: 6px;
    background: var(--particle-bg);
    box-shadow: var(--particle-shadow);
    backdrop-filter: blur(1px);
    transform: translate(-50%, -50%);
  }

  @keyframes pulse {
    0% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.8;
    }
    50% {
      transform: translate(-50%, -50%) scale(1.1);
      opacity: 0.4;
    }
    100% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.8;
    }
  }

  @keyframes particleOrbit {
    0% {
      transform: translate(-50%, -50%) rotate(0deg) translateX(20px);
      opacity: 1;
    }
    100% {
      transform: translate(-50%, -50%) rotate(360deg) translateX(20px);
      opacity: 0;
    }
  }
}

